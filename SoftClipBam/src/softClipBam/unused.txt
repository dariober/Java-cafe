    /**
     * Soft clip cigar. Clipping is done relative to the sequence as it is generated by 
     * the sequencer. 
     * @param rec SAM record with cigar string to clip.
     * @param R1_3p Number of bases to soft clip remove from 3'end of read1. 
     * 				I.e. from the RIGHT of the read as you see it on the fastq file
     * @param R1_5p Number of bases to soft clip remove from 5'end of read1. 
     * 				I.e. from the LEFT of the read as you see it on the fastq file
     * @param R2_3p Same as R1_3p but applied to read2.
     * @param R2_5p Same as R1_5p but applied to read2.
     * @return cigar string in rec clipped.
     */    
    private static List<CigarElement> cigarClipper(SAMRecord rec, int R1_5p, int R1_3p, int R2_5p, int R2_3p){
    	
    	List<CigarElement> cigar= rec.getCigar().getCigarElements();
    	boolean is_reverse= rec.getReadNegativeStrandFlag();
    	if (is_reverse){
    		cigar= invertCigarElements(cigar);
    	}

    	int r1_3p= (rec.getReadLength() - R1_3p+1) < 0 ? 1 : rec.getReadLength() - R1_3p+1;
    	int r2_3p= (rec.getReadLength() - R2_3p+1) < 0 ? 1 : rec.getReadLength() - R2_3p+1;
    	
    	int r1_5p= (rec.getReadLength() - R1_5p) < 0 ? 0 : rec.getReadLength() - R1_5p;
    	int r2_5p= (rec.getReadLength() - R2_5p) < 0 ? 0 : rec.getReadLength() - R2_5p;

    	if (!rec.getReadPairedFlag() || rec.getFirstOfPairFlag()){
    		if(R1_3p > 0){
    			CigarUtil.softClip3PrimeEndOfRead(rec, r1_3p);
    		}
    	} else if(!rec.getFirstOfPairFlag()){
    		if(R2_3p > 0){
    			CigarUtil.softClip3PrimeEndOfRead(rec, r2_3p);
    		}
    	} else {
    		System.err.println("Unexpected case");
    		System.exit(1);
    	}
    	/*
    	if (!rec.getReadPairedFlag() || rec.getFirstOfPairFlag()){
    		if (R1_3p > 0) {
    			cigar= CigarUtil.softClipEndOfRead(r1_3p, cigar);
    		}
    		if (R1_5p > 0) {
    			cigar= softClipStartOfRead(r1_5p, cigar);
    		}
    	}
    	else {
    		if (R2_3p > 0){
    			cigar= CigarUtil.softClipEndOfRead(r2_3p, cigar);
    		}
    		if (R2_5p > 0){
    			cigar= softClipStartOfRead(r2_5p, cigar);
    		}
    	} 
    	*/   	
    	if (is_reverse){
    		cigar= invertCigarElements(cigar);
    	}
    	return(cigar);
    }
    
    
    
    /**
     * Same as CigarUtil.softClipEndOfRead but applied to start of read.
     * @param clipFrom Argument passed to softClipEndOfRead(). 
     *        It means that this many bases from the right-hand side of the read reamin unlicpped.
     *        I.e. clipFrom= 0: all the read is soft clipped; 
     * 		       clipFrom= readLength: Nothing is clipped.
     * 		       clipFrom= 10: The last ten bases remain unclipped.
     * @param cigar
     * @return
     */
    private static List<CigarElement> softClipStartOfRead(int clipFrom, List<CigarElement> cigar){
    	if (clipFrom < 0){
    		System.err.println("softClipStartOfRead: clipFrom < 0. Returning null.");
    		return(null);
    	}
    	// To clip from start you need to 
    	// 1) invert the cigar 
    	// 2) clip end of read
    	// 3) re-invert back cigar
    	List<CigarElement> cigarClipped= 
    			invertCigarElements(
    					CigarUtil.softClipEndOfRead(
    							clipFrom+1, invertCigarElements(cigar)
    					)
    			);
    	
//    	List<CigarElement> cigarRev= invertCigarElements(cigar);
//   	List<CigarElement> cigarRevClipped= CigarUtil.softClipEndOfRead(clipFrom+1, cigarRev);
//    	List<CigarElement> cigarClipped= invertCigarElements(cigarRevClipped);
    	return(cigarClipped);
    }

    	/**
	 * Reverse CIGAR string.
	 * See http://code.google.com/p/nxtgen-utils/source/browse/trunk/nxtgen-utils/src/main/java/org/nxtgenutils/impl/PrimerClipper.java?r=15
	 * @param cigar
	 * @return Inverted cigar
	 */
	private static List<CigarElement> invertCigarElements(List<CigarElement> cigarList) {
				
		List<CigarElement> invertedCigarList = new ArrayList<CigarElement>();
        for (int i = cigarList.size() - 1; i >= 0; i--) {
        	invertedCigarList.add(cigarList.get(i));
        }
        return invertedCigarList;
    }
    